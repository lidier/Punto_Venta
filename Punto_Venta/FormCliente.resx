<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Eliminar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f5nwCoU4li8dAAAAAElFTkSuQmCC
</value>
  </data>
</root>