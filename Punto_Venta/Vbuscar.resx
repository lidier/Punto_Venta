<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>